import {AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';
import * as L from 'leaflet';
import 'leaflet-draw';
import {MatRadioButton, MatRadioChange} from '@angular/material/radio';

@Component({
  selector: 'app-map',
  templateUrl: './map.component.html',
  styleUrls: ['./map.component.css'],
})
export class MapComponent implements OnInit, OnDestroy, AfterViewInit{
  private Map;

  constructor(
  ) {
  }

  favoriteSeason = 'Географическая карта';
  seasons: string[] = ['Географическая карта', 'Топографическая карта'];

  OpenTopoMap = 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png';
  OpenStreetMap = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';

  ngOnInit(): void {
    document.getElementById('mapHTML').innerHTML = '<div id=\'map\' style=\'height: 500px;\' leaflet></div>';
    const lIcon = L.icon({
      iconUrl: 'assets/images/location.svg',
      iconSize:     [24, 24],
      shadowSize:   [0, 26],
      iconAnchor:   [12, 24],
      shadowAnchor: [4, 62],
      popupAnchor:  [0, -26]
    });
    const startIcon = L.icon({
      iconUrl: 'assets/images/office.svg',
      iconSize:     [24, 24],
      shadowSize:   [0, 26],
      iconAnchor:   [12, 24],
      shadowAnchor: [4, 62],
      popupAnchor:  [0, -26]
    });
    const endIcon = L.icon({
      iconUrl: 'assets/images/arrived.svg',
      iconSize:     [24, 24],
      shadowSize:   [0, 26],
      iconAnchor:   [12, 24],
      shadowAnchor: [4, 62],
      popupAnchor:  [0, -26]
    });



    // @ts-ignore
    this.Map = L.map('map', {drawControl: false}).setView([60.000, 100.000], 3);
    this.mapStyleDefine(this.OpenStreetMap);
    const markerKh = L.marker([67.734720, 33.726110], {icon: lIcon}).addTo(this.Map).bindPopup('<b>Хибины</b>');
    L.marker([55.259720, 59.792500], {icon: lIcon}).addTo(this.Map).bindPopup('<b>Таганай</b>');
    L.marker([43.345830, 42.448610], {icon: lIcon}).addTo(this.Map).bindPopup('<b>Эльбрус</b>');
    L.marker([56.949400, 32.838600], {icon: lIcon}).addTo(this.Map).bindPopup('<b>Верхневолжские озера</b>');
    L.marker([56.427395, 28.820091], {icon: lIcon}).addTo(this.Map).bindPopup('<b>Великая</b>');
    L.marker([67.500000, 66.000000], {icon: lIcon}).addTo(this.Map).bindPopup('<b>Полярный Урал</b>');
    L.marker([64.838539, 33.693727], {icon: lIcon}).addTo(this.Map).bindPopup('<b>Карелия</b>');
    L.marker([44.263300, 40.171900], {icon: lIcon}).addTo(this.Map).bindPopup('<b>Адыгея</b>');



    this.Map.on('zoom', function() {

      const Zoom = this.getZoom();
      console.log(Zoom);
      if (Zoom > 10) {
        L.marker([67.8514528445585, 33.2602500994107], {icon: startIcon}).addTo(this).bindPopup('<b>Начало Маршрута</b>');
        L.marker([67.8457310789751, 33.6799106592661], {icon: endIcon}).addTo(this).bindPopup('<b>Конец Маршрута</b>');
        const latlngs = [
          [67.8514528445585, 33.2602500994107],
          [67.8470969224148, 33.2615203820751],
          [67.8438213539227, 33.2610568995005],
          [67.8412510703493, 33.2598724396666],
          [67.8389395148703, 33.2598209381103],
          [67.8369644768251, 33.2582244894001],
          [67.8364658341855, 33.260541917989],
          [67.8371263715592, 33.2639751455281],
          [67.8371846532404, 33.2670650476939],
          [67.8368608634577, 33.2692966455942],
          [67.8369256217736, 33.271957396937],
          [67.8365370691829, 33.2750473017222],
          [67.835468516204, 33.279510497523],
          [67.8343351489795, 33.2837162012583],
          [67.8327807272948, 33.2868061060435],
          [67.8310966536575, 33.2886085505015],
          [67.8295096269347, 33.2915267939097],
          [67.8285703154025, 33.295732497645],
          [67.8276957500056, 33.3020839685923],
          [67.8266267922561, 33.3095512384898],
          [67.8255577855698, 33.3170185083872],
          [67.8262315894007, 33.3201770779851],
          [67.8255837014375, 33.3230953213933],
          [67.8251301691677, 33.3272151944402],
          [67.8246442319614, 33.330777168012],
          [67.8242878715836, 33.3347253796819],
          [67.8242068798303, 33.3392314908269],
          [67.8244336560318, 33.3432655331853],
          [67.824255474916, 33.3451538083318],
          [67.8240286969842, 33.3472995755437],
          [67.823234956881, 33.3479433057073],
          [67.8225869857768, 33.3491020200017],
          [67.8220361962034, 33.3513765332463],
          [67.821242388381, 33.3527927396062],
          [67.8204647545595, 33.3540372845891],
          [67.8196708933291, 33.3554964062932],
          [67.8189580153554, 33.357985496259],
          [67.8182775206312, 33.3611612317327],
          [67.8176132090413, 33.3626203534368],
          [67.8179858739667, 33.3648948666814],
          [67.8184557473559, 33.368242263532],
          [67.8182451156261, 33.3711175915959],
          [67.8189418133305, 33.3751087186101],
          [67.8190228233429, 33.378327369428],
          [67.8183585329474, 33.3816318509343],
          [67.8174997881014, 33.3854513165715],
          [67.8167544367971, 33.3894853589299],
          [67.8161548978393, 33.3944206235173],
          [67.8154905258885, 33.3991413113835],
          [67.8146964956047, 33.4038190839055],
          [67.8149071593304, 33.4079818722966],
          [67.8154905258885, 33.412015914655],
          [67.8156687738761, 33.4165220258],
          [67.8159766535605, 33.4208993909123],
          [67.8154581170174, 33.4243755337956],
          [67.8147613154149, 33.4268217084172],
          [67.8140320821821, 33.4291391370061],
          [67.8132380022093, 33.43038367806],
          [67.8128166427592, 33.4320488007506],
          [67.8108134597518, 33.4341258966014],
          [67.8100030635315, 33.4376106256968],
          [67.8103272258865, 33.4436187738901],
          [67.8108134609884, 33.4499702448374],
          [67.8109107067947, 33.4566650385386],
          [67.8129851875994, 33.4672222132212],
          [67.8136010136372, 33.4737453455454],
          [67.8139834664422, 33.4825687392731],
          [67.8125314106597, 33.4849891657359],
          [67.8118507287271, 33.4909973139292],
          [67.8110403672404, 33.4965763086802],
          [67.8100678963622, 33.5025844568735],
          [67.8086091141675, 33.508249282313],
          [67.8067611926696, 33.5115966791636],
          [67.805594009077, 33.5155448908335],
          [67.8049131250662, 33.5213813776499],
          [67.8038755493891, 33.5285053247935],
          [67.8031946153232, 33.5369167322642],
          [67.8030649113476, 33.5437831873423],
          [67.8024812345522, 33.5530529016978],
          [67.8018326876886, 33.563352584315],
          [67.8015408357305, 33.5763988489634],
          [67.8012489801292, 33.5825786585337],
          [67.8006652579968, 33.5881576532847],
          [67.8004706807142, 33.5927925104624],
          [67.8001139514904, 33.5967407221323],
          [67.8018002598732, 33.5986289972788],
          [67.8027082217042, 33.6018905634409],
          [67.8046213115617, 33.6016330713755],
          [67.8067936136041, 33.6054096216685],
          [67.8103466751881, 33.6070232375641],
          [67.8138278928231, 33.6082420343882],
          [67.8173604416461, 33.6139068598276],
          [67.8212488685788, 33.6195716852671],
          [67.8246831073347, 33.6245498651987],
          [67.827857709032, 33.6281547541148],
          [67.830805167041, 33.6288413996226],
          [67.8342056177926, 33.6294422144419],
          [67.8373789249538, 33.6340770716196],
          [67.8391920496323, 33.645664214564],
          [67.8403575553991, 33.6550197596079],
          [67.841069780267, 33.6603412622935],
          [67.8418143557493, 33.6682376856333],
          [67.8427207633991, 33.6769924158579],
          [67.8457310789751, 33.6799106592661],
        ];
        // @ts-ignore
        L.polyline(latlngs, {color: '#366578'}).addTo(this);

        // const wer = L.Draw.Polyline(this, drawControl.options.polyline).enable();

      }
    });


  }

  change(event: MatRadioChange): void {
    switch (event.value) {
      case ('Топографическая карта'):
        this.mapStyleDefine(this.OpenTopoMap);
        break;
      case ('Географическая карта'):
        this.mapStyleDefine(this.OpenStreetMap);
        break;
    }
  }

  mapStyleDefine(mapStyle): void {
    L.tileLayer(mapStyle, {
      maxZoom: 19,
      attribution: 'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)'
    }).addTo(this.Map);
  }

  ngAfterViewInit(): void {
  }

  ngOnDestroy(): void {
  }

}
